% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat-treemap.R
\name{stat_treemap}
\alias{stat_treemap}
\title{Calculate a treemap from data}
\usage{
stat_treemap(mapping = NULL, data = NULL, geom = "rect",
  position = "identity", na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE, label.position = c(0.5, 0.5), aspect_ratio = 1, ...)
}
\arguments{
\item{...}{}
}
\description{
A stat to turn data into treemaps.
}
\details{
Use with geom_rect, mostly.
}
\examples{
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggtreemap)

df <- data.frame(
  label = c("a1", "a2", "b1", "c1", "c2"),
  group = c("a", "a", "b", "c", "c"),
  size = c(0.5,4,2,1,0.5)
)

ggplot(df, aes(area = size, fill = group, subgroup = group)) +
  geom_rect(stat = "treemap", mapping = aes(layout_area = size * 2), color = "white") +
  geom_rect(stat = "treemap", alpha = 0.5, color = "white") +
  theme_minimal() +
  theme(axis.text = element_blank(), panel.grid = element_blank())

ggplot(df, aes(area = size, fill = group, subgroup = group)) +
  geom_rect(stat = "treemap", color = "white") +
  geom_text(aes(label = label), stat = "treemap") +
  geom_rect(data = aggregate(size ~ group, df, sum), stat="treemap", fill = NA, color = "white", size=2) +
  geom_label(
    data = aggregate(size ~ group, df, sum),
    aes(label = group),
    label.position = c(0, 0),
    hjust = 0, vjust = 1,
    nudge_x = 0.025, nudge_y = -0.025,
    fill = "white",
    stat = "treemap") +
  theme_minimal()

}
